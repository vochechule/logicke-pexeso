/* App.css */

/* Base Styles */
:root {
  --primary: #6c5ce7;
  --secondary: #a29bfe;
  --accent: #fd79a8;
  --dark: #2d3436;
  --light: #f5f6fa;
  --success: #00b894;
  --warning: #fdcb6e;
  --danger: #d63031;
  --card-bg: #ffffff;
  --card-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  --transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

body {
  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
  background-size: 400% 400%;
  animation: gradientBG 15s ease infinite;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 30%, rgba(156, 39, 176, 0.15) 0%, transparent 0%),
    radial-gradient(circle at 80% 70%, rgba(33, 150, 243, 0.15) 0%, transparent 0%);
  pointer-events: none;
  z-index: 100;
}


.App {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}

h1 {
  font-size: 3rem;
  margin-bottom: 1.5rem;
  background: linear-gradient(to right, var(--primary), var(--accent));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  padding-bottom: 0.5rem;
}

h1::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 4px;
  background: linear-gradient(to right, var(--primary), var(--accent));
  border-radius: 2px;
}

/* Game Controls */
.game-controls {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 2rem;
  width: 100%;
  background: rgba(255, 255, 255, 0.8);
  padding: 1.5rem;
  border-radius: 15px;
  box-shadow: var(--card-shadow);
  backdrop-filter: blur(5px);
}

.mode-selector {
  display: flex;
  gap: 0.5rem;
}

.difficulty-selector {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.stats {
  display: flex;
  gap: 1.5rem;
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--dark);
}

/* Buttons */
button, select {
  padding: 0.8rem 1.5rem;
  border: none;
  border-radius: 50px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

button {
  background: var(--primary);
  color: white;
  position: relative;
  overflow: hidden;
}

button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

button:active {
  transform: translateY(0);
}

button:disabled {
  background: var(--secondary);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%);
  transform-origin: 50% 50%;
}

button:focus:not(:active)::after {
  animation: ripple 0.6s ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(20, 20);
    opacity: 0;
  }
}

select {
  background: white;
  border: 2px solid var(--secondary);
  color: var(--dark);
  appearance: none;
  padding-right: 2.5rem;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 1em;
}

select:focus {
  outline: none;
  border-color: var(--primary);
}

/* Game Board */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 1.5rem;
  width: 100%;
  max-width: 670px;
  margin-top: 2rem;
}

.card-wrapper {
  aspect-ratio: 1;
  perspective: 1000px;
  cursor: pointer;
}

.card-wrapper:hover .card-inner:not(.flipped) {
  transform: translateY(-5px) rotateX(5deg);
  box-shadow: 0 15px 35px -5px rgba(0,0,0,0.4);
}

.card-wrapper:hover .card-front::before {
  animation: shine 1.5s ease infinite;
}

@keyframes shine {
  0% { transform: rotate(45deg) translateX(-100%); }
  100% { transform: rotate(45deg) translateX(100%); }
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  border-radius: 15px;
  box-shadow: var(--card-shadow);
}

.card-inner.flipped {
  transform: rotateY(180deg);
}

.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 15px;
  transition: var(--transition);
}

.card-front {
  background: linear-gradient(45deg, var(--primary), var(--accent));
  color: white;
  font-size: 2.5rem;
  font-weight: bold;
  transform: rotateY(0deg);
}

.card-back {
  background: var(--card-bg);
  transform: rotateY(180deg);
  font-size: 2rem;
  font-weight: bold;
  color: var(--dark);
  padding: 1rem;
  text-align: center;
  word-break: break-word;
  overflow: hidden;
}

/* Matched cards animation */
.card-inner.flipped.matched {
  animation: pulse 1s;
}

@keyframes pulse {
  0% { transform: rotateY(180deg) scale(1); }
  50% { transform: rotateY(180deg) scale(1.1); }
  100% { transform: rotateY(180deg) scale(1); }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .grid {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 1rem;
  }
  
  h1 {
    font-size: 2rem;
  }
  
  button, select {
    padding: 0.6rem 1rem;
    font-size: 0.9rem;
  }
  
  .card-front, .card-back {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  body {
    padding: 1rem;
  }
  
  .game-controls {
    flex-direction: column;
    align-items: center;
  }
  
  .mode-selector {
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .stats {
    flex-direction: column;
    gap: 0.5rem;
    align-items: center;
  }
}

/* Confetti effect for completed game */
.confetti {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 1000;
}

.confetti-piece {
  position: absolute;
  width: 10px;
  height: 10px;
  background: var(--accent);
  opacity: 0;
  animation: confetti 5s ease-in-out infinite;
}

@keyframes confetti {
  0% {
    opacity: 1;
    transform: translateY(0) rotate(0deg);
  }
  100% {
    opacity: 0;
    transform: translateY(100vh) rotate(720deg);
  }
}

/* Leaderboard Styles */
.leaderboard {
  position: fixed;
  top: 1rem;
  left: 1rem;
  background-color: rgba(255, 255, 255, 0.9);
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  max-width: 200px;
  z-index: 1000;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  transition: all 0.3s ease;
}

.leaderboard:hover {
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  transform: translateY(-2px);
}

.leaderboard-title {
  font-size: 1.2rem;
  margin-bottom: 0.8rem;
  color: var(--primary);
  border-bottom: 2px solid var(--secondary);
  padding-bottom: 0.3rem;
}

.leaderboard-empty {
  color: var(--dark);
  opacity: 0.7;
  font-style: italic;
}

.leaderboard-list {
  padding-left: 1.2rem;
  margin: 0.5rem 0;
}

.leaderboard-item {
  margin-bottom: 0.3rem;
  color: var(--dark);
  font-weight: 500;
}

.leaderboard-item::marker {
  color: var(--accent);
}

.leaderboard-timer {
  margin-top: 0.8rem;
  padding-top: 0.8rem;
  border-top: 1px dashed var(--secondary);
  color: var(--dark);
  font-weight: 600;
}

.leaderboard-timer strong {
  color: var(--primary);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .leaderboard {
    position: static;
    max-width: 100%;
    margin: 1rem auto;
    width: 100%;
    box-sizing: border-box;
  }
}